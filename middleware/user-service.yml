openapi: 3.0.3
info:
  title: User Service v1
  description: |-
    API for User Service
  termsOfService: http://swagger.io/terms/
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
tags:
  - name: User
    description: People registered in the system as users
paths:
  /api/v1/user:
    post:
      tags:
        - User
      summary: Create a new User
      description: Create a new User
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiUser'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUser'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    get:
      tags:
        - User
      summary: Get all Users from the system
      description: Get all Users from the system
      operationId: getUsers
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUsers'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'

components:
  schemas:
    ApiUsers:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/ApiUser'
    ApiUser:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: 'Abdullah'
        email:
          type: string
          example: 'example@example.com'
    UserCreatedEvent:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/ApiUser'
    ApiError:
      type: object
      properties:
        code:
          type: string
          description: 'Functional code specifying the error'
          example: '2300'
        message:
          type: string
          description: 'Brief explanation about the error, for more information consult the User Service team'

    ValidateUserCommand:
      type: object
      properties:
        reservationId:
          type: integer
          format: int64
        userEmail:
          type: string

    UserValidatedEvent:
      type: object
      properties:
        reservationId:
          type: integer
          format: int64
        userId:
          type: integer
          format: int64
        isClient:
          type: boolean